{"version":3,"sources":["./src/app/services/auth.guard.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(public authService:AuthService, private router:Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>OpenSponsor</h1>\n    <p class=\"lead\">Welcome to the open-source sponsor matching and step-work service!</p>\n    <div>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>&nbsp;<a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-md-4\">\n        <h3>Find a Sponsor</h3>\n        <p>If you want to go through the 12-steps and need some guidance look no further.  You can find an available sponsor here that will take you through the steps.</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Be a Sponsor</h3>\n        <p>Are you experienced at taking other people through the 12-steps and want to find more people to help?  Register here and select \"Looking to take other people through the steps.\"</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Make step-work modules</h3>\n        <p>Want to make an impact on more people?  Create your own modules for taking others through step-work.  Share your experience, strengh, and hope with others by making learning modules to help others go through the steps.</p>\n    </div>\n</div>\n","<div *ngIf=\"user; else elseBlock\">\n    <h2 class=\"page-header\">Hello {{user.name}}!</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Name: {{user.name}}</li>\n        <li class=\"list-group-item\">Username: {{user.username}}</li>\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\n    </ul>\n</div>\n<ng-template #elseBlock>\n    <div class=\"jumbotron text-center\">\n        <h2>You are not logged in!</h2>\n        <br>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>&nbsp;<a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n    user!: any;\n\n    //inject dependencies\n  constructor(private authService:AuthService, private router:Router) { }\n\n  ngOnInit() {\n       this.authService.getProfile().subscribe((profile: any) => {\n           if(profile.user !== null || profile.user !== undefined){\n               this.user = profile.user;\n           }\n       },\n        err => {\n            console.log(err);\n            return false;\n        });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h2 class=\"page-header\">Dashboard</h2>\n    <p>Welcome to your Dashboard</p>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'os-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'open-sponsor';\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    username: String;\n    password: String;\n\n  constructor(\n      private authService:AuthService,\n      private router:Router,\n      private flashMessage:FlashMessagesService\n  ) {\n      this.username = \"\";\n      this.password = \"\";\n  }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n      const user =  {\n          username: this.username,\n          password: this.password\n      }\n\n      this.authService.authenticateUser(user).subscribe((data: any) => {\n          console.log(data);\n          if(data.success){\n              this.authService.storeUserData(data.token, data.user);\n              this.flashMessage.show(\"Login Successful\", {\n                  cssClass: 'alert-success',\n                  timeout: 5000});\n              this.router.navigate(['/dashboard']);\n          } else {\n              this.flashMessage.show(data.msg, {\n                  cssClass: 'alert-danger',\n                  timeout: 5000});\n              this.router.navigate(['/login']);\n          }\n      })\n  }\n\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from './../../services/validate.service';\nimport { AuthService } from './../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    name: String;\n    username: String;\n    email: String;\n    password: String;\n\n  constructor(\n      private validateService: ValidateService,\n      private flashMessage: FlashMessagesService,\n      private authService: AuthService,\n      private router: Router\n  ) {\n      this.name = \"\";\n      this.username = \"\";\n      this.email = \"\";\n      this.password = \"\";\n    }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit(){\n      const user = {\n          name: this.name,\n          email: this.email,\n          username: this.username,\n          password: this.password\n      }\n\n      //Required Fields\n      if(!this.validateService.validateRegister(user)){\n          this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n          return false;\n      }\n\n      if(!this.validateService.validateEmail(user.email)){\n          this.flashMessage.show('Please enter a valid email', {cssClass: 'alert-danger', timeout: 3000});\n          return false;\n      }\n\n      // Register User\n      this.authService.registerUser(user).subscribe((data: any) => {\n          if(data.success){ //data.success when wired to backend\n              this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\n              this.router.navigate(['/login']);\n          } else {\n              this.flashMessage.show('Sfomething went wrong', {cssClass: 'alert-danger', timeout: 3000});\n              this.router.navigate(['/register']);\n          }\n      });\n\n  }\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>\n","//import modules\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n//import components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n//import services\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/auth.guard'\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n//  Create route map for moving around the url\n//  Routes protected by AuthGuard will reroute to login when not logged in\nconst appRoutes: Routes = [\n    {path:'', component: HomeComponent},\n    {path:'register', component: RegisterComponent},\n    {path:'login', component: LoginComponent},\n    {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n    {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n]\n\n/*\n    declarations: components,\n    imports: modules,\n    providers: services,\n    bootstrap: topDOM component\n*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    AppRoutingModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [\n      ValidateService,\n      AuthService,\n      JwtHelperService,\n      AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n      if(user.username == undefined || user.username == \"\" || user.email == undefined || user.email == \"\" || user.password == undefined || user.password == \"\"){\n          return false;\n      } else {\n          return true;\n      }\n  }\n\n  validateEmail(email){\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\" aria-label=\"Open sponsor navigation bar\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">OpenSponsor</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbar\">\n        <ul class=\"navbar-nav\">\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" aria-current=\"page\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n          </li>\n          <!-- Disabled example\n          <li class=\"nav-item\">\n            <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n          </li>\n          -->\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" [routerLink]=\"['/profile']\" id=\"dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Profile</a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdown\">\n              <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n              <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n              <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n            </ul>\n          </li>\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n          </li>\n        </ul>\n        <!--\n        <form>\n          <input class=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n        </form>\n        -->\n      </div>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from './../../services/validate.service';\nimport { AuthService } from './../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n      private validateService: ValidateService,\n      private flashMessage: FlashMessagesService,\n      public authService: AuthService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n      this.authService.logout();\n      this.flashMessage.show(\"Logout Successful\", {\n          cssClass: 'alert-success',\n          timeout: 3000});\n      this.router.navigate(['/login']);\n      return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable()\nexport class AuthService {\n    authToken: any;\n    user: any;\n\n    constructor(\n        private http: HttpClient,\n    ) { }\n\n    registerUser(user){\n        let headers = new HttpHeaders();\n\n        headers = headers.append('Content-Type', 'application/json');\n\n        return this.http.post('http://localhost:3000/users/register', user, {headers: headers});\n    }\n\n    authenticateUser(user){\n        let headers = new HttpHeaders();\n\n        headers = headers.append('Content-Type', 'application/json');\n\n        return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers});\n    }\n\n    getProfile(){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Authorization', this.authToken);\n        console.log('Auth Header:', headers);\n        console.log('http://localhost:3000/users/profile', {headers: headers});\n        return this.http.get('http://localhost:3000/users/profile', {headers: headers});\n    }\n\n    loadToken(){\n        const token = localStorage.getItem('id_token');\n        this.authToken = token;\n    }\n\n    loggedIn(){\n        const helper = new JwtHelperService();\n        this.loadToken();\n        const isExpired = helper.isTokenExpired(this.authToken)\n        return !isExpired;\n    }\n\n    storeUserData(token, user){\n        localStorage.setItem('id_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        this.authToken = token;\n        this.user = user;\n    }\n\n    logout(){\n        this.authToken = null;\n        this.user = null;\n        localStorage.clear();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}