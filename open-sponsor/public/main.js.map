{"version":3,"sources":["./src/app/services/auth.guard.ts","./src/app/models/chat-message.model.ts","./src/environments/environment.ts","./src/app/components/chatroom/chatroom.component.ts","./src/app/components/chatroom/chatroom.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/chatroom/user-list/user-list.component.html","./src/app/components/chatroom/user-list/user-list.component.ts","./src/app/components/chatroom/chat-form/chat-form.component.ts","./src/app/components/chatroom/chat-form/chat-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/user.model.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/chatroom/chat-message/chat-message.component.ts","./src/app/components/chatroom/chat-message/chat-message.component.html","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/chatroom/chat-feed/chat-feed.component.html","./src/app/components/chatroom/chat-feed/chat-feed.component.ts","./src/app/services/auth.service.ts","./src/app/services/chat.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(public authService:AuthService, private router:Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","export class ChatMessage {\r\n    key?: [{}];\r\n    _id?: string;\r\n    username?: string;\r\n    message?: string;\r\n    timestamp?: string;\r\n    datetime?: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.css']\n})\nexport class ChatroomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Chatroom</h2>\r\n<div class=\"main-chat jumbotron\">\r\n    <table class=\"table\">\r\n        <tr>\r\n            <td>\r\n                <div class=\"user-list-wrapper\">\r\n                    <app-user-list></app-user-list>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div #scroller class=\"feed-wrapper\">\r\n                    <app-chat-feed></app-chat-feed>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"chat-form-wrapper\">\r\n        <app-chat-form></app-chat-form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>OpenSponsor</h1>\n    <p class=\"lead\">Welcome to the open-source sponsor matching and step-work service!</p>\n    <div>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>&nbsp;<a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-md-4\">\n        <h3>Find a Sponsor</h3>\n        <p>If you want to go through the 12-steps and need some guidance look no further.  You can find an available sponsor here that will take you through the steps.</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Be a Sponsor</h3>\n        <p>Are you experienced at taking other people through the 12-steps and want to find more people to help?  Register here and select \"Looking to take other people through the steps.\"</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Make step-work modules</h3>\n        <p>Want to make an impact on more people?  Create your own modules for taking others through step-work.  Share your experience, strengh, and hope with others by making learning modules to help others go through the steps.</p>\n    </div>\n</div>\n","<div *ngIf=\"user; else elseBlock\">\n    <div *ngIf=\"!edit;\">\n        <h2 class=\"page-header\">Hello {{user.name}}!</h2>\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\">Username: {{user.username}}</li>\n            <li class=\"list-group-item\">Name: {{user.name}}</li>\n            <li class=\"list-group-item\">Email: {{user.email}}</li>\n            <li class=\"list-group-item\">Looking for a sponsor? {{user.lfsponsor}}</li>\n            <li class=\"list-group-item\">Looking to sponsor others? {{user.sponsoring}}</li>\n            <li *ngIf=\"user.sponsor;\" class=\"list-group-item\">Sponsor: {{user.sponsor}}</li>\n            <!--\n            <div *ngFor=\"let user.sponsee.username of user.sponsee;\" class=\"list-group-item\">Sponsee/s: {{user.sponsee.username}}</div>\n            -->\n            <li class=\"list-group-item\">Biography: {{user.bio}}</li>\n        </ul>\n        <button (click)=\"onEdit()\" class=\"btn btn-secondary\">Edit</button>\n    </div>\n    <div *ngIf=\"edit;\">\n        <h3 class=\"page-header text-center\">Editing {{user.username}}...</h3>\n        <table class=\"table-bordered\">\n            <tr>\n                <td>Name: </td>\n                <td><input type=\"text\" [(ngModel)]=\"user.name\" name=\"user.name\" class=\"form-control\"></td>\n            </tr>\n            <tr>\n                <td>Email: </td>\n                <td><input type=\"text\" [(ngModel)]=\"user.email\" name=\"user.email\" class=\"form-control\"></td>\n            </tr>\n            <tr>\n                <td>Looking for a sponsor? </td>\n                <td><input type=\"checkbox\" [(ngModel)]=\"user.lfsponsor\" name=\"user.lfsponsor\" class=\"form-control-checkbox\"></td>\n            </tr>\n            <tr>\n                <td>Looking to sponsor others? </td>\n                <td><input type=\"checkbox\" [(ngModel)]=\"user.sponsoring\" name=\"user.sponsoring\" class=\"form-control-checkbox disable\"></td>\n            </tr>\n            <tr>\n                <td>Biography: </td>\n                <td><textarea [(ngModel)]=\"user.bio\" name=\"user.bio\" rows=\"5\" cols=\"80\"></textarea></td>\n            </tr>\n        </table>\n        <button (click)=\"onSave()\" class=\"btn btn-primary\">Save</button>\n    </div>\n</div>\n<ng-template #elseBlock>\n    <div class=\"jumbotron text-center\">\n        <h2>You are not logged in!</h2>\n        <br>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>&nbsp;<a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { User } from '../../models/user.model';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n    user!: User;\n    edit: Boolean;\n\n    //inject dependencies\n  constructor(\n      private authService:AuthService,\n      private flashMessage: FlashMessagesService\n  ) {\n      this.edit = false;\n  }\n\n  ngOnInit() {\n      /** View the User from db */\n       this.authService.getProfile().subscribe((profile: any) => {\n           if(profile.user !== null || profile.user !== undefined){\n               this.user = profile.user;\n           }\n       },\n        err => {\n            console.log(err);\n            return false;\n        });\n  }\n\n  onEdit() {\n      this.edit = true;\n  }\n\n  onSave() {\n      this.authService.updateUser(this.user).subscribe((data: any) => {\n          if(data.success){\n              this.flashMessage.show('Your account was updated', {cssClass: 'alert-success', timeout: 3000});\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          }\n      });\n      this.edit = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h2 class=\"page-header\">Dashboard</h2>\n    <p>Welcome to your Dashboard</p>\n</div>\n","<div class=\"d-flex flex-column p-3 bg-light\" style=\"width: 180px;\">\n    <h5>User List</h5>\n    <ul class=\"nav nav-pills flex-column mb-auto\">\n        <li *ngFor=\"let user of users\" class=\"nav-item user\">\n            <em>@{{ user.username }}</em>\n            <br>\n        </li>\n    </ul>\n</div>\n","import { Component, OnInit} from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n    users!: Array<any>;\n\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n      this.getLoggedInUsers();\n  }\n\n/*\n  ngOnChanges() {\n      this.getLoggedInUsers();\n  }\n*/\n  //Needs extended to show everyone currently logged in\n  getLoggedInUsers() {\n      this.authService.getAllOnlineUsers().subscribe((user: any) => {\n          if(user.user !== null){\n              this.users = user.users;\n          }\n      },\n       err => {\n           console.log(err);\n           return false;\n       });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../../services/chat.service';\n\n\n@Component({\n  selector: 'app-chat-form',\n  templateUrl: './chat-form.component.html',\n  styleUrls: ['./chat-form.component.css']\n})\nexport class ChatFormComponent implements OnInit {\n    message: string;\n\n\n  constructor(private chat: ChatService) {\n      this.message = '';\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  send() {\n      this.chat.sendMessage(this.message);\n      this.message = '';\n  }\n\n  handleSubmit(event: any) {\n      if (event.keyCode == 13) {\n          this.send();\n      } else {return}\n  }\n\n}\n","<input class=\"chat-input\" [(ngModel)]=\"message\" (keydown)=\"handleSubmit($event)\" />&nbsp;\n<button class=\"btn btn-primary\" (click)=send()>Send</button>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'os-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'open-sponsor';\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","export class User {\r\n    _id?: string;\r\n    name?: string;\r\n    email?: string;\r\n    username?: string;\r\n    password?: string;\r\n    lfsponsor?: boolean;\r\n    sponsoring?: boolean;\r\n    sponsor?: string;\r\n    sponsee?: any;\r\n    bio?: string;\r\n    status?: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    username: string;\n    password: string;\n\n  constructor(\n      private authService:AuthService,\n      private router:Router,\n      private flashMessage:FlashMessagesService\n  ) {\n      this.username = '';\n      this.password = '';\n  }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n      const user = {\n          username: this.username,\n          password: this.password\n      }\n\n      this.authService.authenticateUser(user).subscribe((data: any) => {\n          if(data.success){\n              this.authService.storeUserData(data.token, data.user);\n              setTimeout(() => {}, 1000);\n              this.authService.updateUserOnline().subscribe((data: any) => {\n                  if(data.success){\n                      console.log(data);\n                  } else {\n                      console.log(data);\n                  }\n              });\n              this.flashMessage.show(\"Login Successful\", {\n                  cssClass: 'alert-success',\n                  timeout: 5000});\n              this.router.navigate(['/dashboard']);\n          } else {\n              this.flashMessage.show(data.msg, {\n                  cssClass: 'alert-danger',\n                  timeout: 5000});\n              this.router.navigate(['/login']);\n          }\n      });\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from './../../services/validate.service';\nimport { AuthService } from './../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    user = new User();\n\n\n  constructor(\n      private validateService: ValidateService,\n      private flashMessage: FlashMessagesService,\n      private authService: AuthService,\n      private router: Router\n  ) {\n      this.user.lfsponsor = false;\n      this.user.sponsoring = false;\n      this.user.status = 'offline';\n    }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit(){\n      //Required Fields\n      if(!this.validateService.validateRegister(this.user)){\n          this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n          return false;\n      }\n\n      if(!this.validateService.validateEmail(this.user.email)){\n          this.flashMessage.show('Please enter a valid email', {cssClass: 'alert-danger', timeout: 3000});\n          return false;\n      }\n\n      // Register User\n      this.authService.registerUser(this.user).subscribe((data: any) => {\n          if(data.success){\n              this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\n              this.router.navigate(['/login']);\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n              this.router.navigate(['/register']);\n          }\n      });\n\n  }\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"user.name\" name=\"user.name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"user.username\" name=\"user.username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"user.email\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"user.password\" class=\"form-control\">\n    </div>\n    <div class=\"checkbox text-center\">\n        <label>Looking for a sponsor?&nbsp;&nbsp;</label>\n        <input type=\"checkbox\" [(ngModel)]=\"user.lfsponsor\" name=\"user.lfsponsor\" class=\"form-checkbox\">\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <label>Looking to sponsor someone?&nbsp;&nbsp;</label>\n        <input type=\"checkbox\" [(ngModel)]=\"user.sponsoring\" name=\"user.sponsoring\" class=\"form-checkbox\">\n    </div>\n    <div class=\"form-group\">\n        <label>Biography</label>\n        <div class=\"text-center\">\n            <textarea [(ngModel)]=\"user.bio\" name=\"user.bio\" rows=\"5\" cols=\"80\"></textarea>\n        </div>\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>\n","//import modules\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n//import components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\nimport { UserListComponent } from './components/chatroom/user-list/user-list.component';\nimport { ChatFeedComponent } from './components/chatroom/chat-feed/chat-feed.component';\nimport { ChatMessageComponent } from './components/chatroom/chat-message/chat-message.component';\nimport { ChatFormComponent } from './components/chatroom/chat-form/chat-form.component';\n\n//import services\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/auth.guard'\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ChatService } from './services/chat.service';\n\n\n//  Create route map for moving around the url\n//  Routes protected by AuthGuard will reroute to login when not logged in\nconst appRoutes: Routes = [\n    {path:'', component: HomeComponent},\n    {path:'register', component: RegisterComponent},\n    {path:'login', component: LoginComponent},\n    {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n    {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n    {path:'chatroom', component: ChatroomComponent, canActivate:[AuthGuard]}\n]\n\n/*\n    declarations: components,\n    imports: modules,\n    providers: services,\n    bootstrap: Init component\n*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    ChatroomComponent,\n    UserListComponent,\n    ChatFeedComponent,\n    ChatMessageComponent,\n    ChatFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    AppRoutingModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [\n      ValidateService,\n      AuthService,\n      JwtHelperService,\n      AuthGuard,\n      ChatService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n//import { ChatService } from '../../../services/chat.service';\nimport { ChatMessage } from '../../../models/chat-message.model';\n\n@Component({\n  selector: 'app-chat-message',\n  templateUrl: './chat-message.component.html',\n  styleUrls: ['./chat-message.component.css']\n})\nexport class ChatMessageComponent implements OnInit {\n\n    @Input() chatMessage: ChatMessage;\n    username?: string;\n    message?: string;\n    timestamp?: string;\n\n\n  constructor() {\n      this.chatMessage = {};\n      this.chatMessage.message = '';\n  }\n\n  ngOnInit(chatMessage = this.chatMessage) {\n      this.message = chatMessage.message;\n      this.username = chatMessage.username;\n      this.timestamp = chatMessage.timestamp;\n  }\n\n}\n","<div class=\"message-container\">\n    <p>{{ username }}</p>\n    <p>{{ timestamp }}</p>\n    <p>{{ message }}</p>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user: any){\n      if(user.username == undefined || user.username == \"\" || user.email == undefined || user.email == \"\" || user.password == undefined || user.password == \"\"){\n          return false;\n      } else {\n          return true;\n      }\n  }\n\n  validateEmail(email: any){\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\" aria-label=\"Open sponsor navigation bar\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">OpenSponsor</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbar\">\n        <ul class=\"navbar-nav\">\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" aria-current=\"page\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n          </li>\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Account</a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdown\">\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/profile']\">My Profile</a></li>\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/chatroom']\">My Chatroom</a></li>\n                <li><a class=\"dropdown-item disabled\" href=\"#\">My Step-Work</a></li>\n            </ul>\n          </li>\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n      private flashMessage: FlashMessagesService,\n      public authService: AuthService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n      this.authService.updateUserOffline().subscribe((data: any) => {\n          if(data.success){\n              console.log(data);\n          } else {\n              console.log(data);\n          }\n      });\n      this.authService.logout()\n      this.flashMessage.show(\"Logout Successful\", {\n          cssClass: 'alert-success',\n          timeout: 3000});\n      this.router.navigate(['/login']);\n      return false;\n  }\n\n}\n","<div class=\"feed card\" style=\"width: 24rem;\">\n    <div *ngFor=\"let messages of feed\" class=\"messages\">\n        <div class=\"card-header\">\n            <div class=\"text-end\">\n                <em>@{{ messages.username }}</em>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <h6>{{ messages.message }}</h6>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../../services/chat.service';\n\n@Component({\n  selector: 'app-chat-feed',\n  templateUrl: './chat-feed.component.html',\n  styleUrls: ['./chat-feed.component.css']\n})\nexport class ChatFeedComponent implements OnInit {\n    feed: any;\n\n  constructor(private chat: ChatService) { }\n\n  ngOnInit(): void {\n      this.chat.getMessages().subscribe((feed: any) => {\n          if(feed.messages !== null){\n              this.feed = feed.messages.slice().reverse();\n          }\n      },\n       err => {\n           console.log(err);\n           return false;\n       });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from '../models/user.model';\n\n\n@Injectable()\nexport class AuthService {\n    authToken: any;\n    user!: User;\n    url: String = 'http://localhost:3000/';\n\n    constructor(private http: HttpClient) {\n        this.user = new User();\n    }\n\n    registerUser(user: User){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.post(this.url+'users/register', user, {headers: headers});\n    }\n\n    authenticateUser(user: User){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.post(this.url+'users/authenticate', user, {headers: headers});\n    }\n\n    getProfile(){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Authorization', this.authToken);\n        return this.http.get(this.url+'users/profile', {headers: headers});\n    }\n\n    getUser(){\n        this.loadUser();\n        return this.user;\n    }\n\n    getAllOnlineUsers(){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Content-Type', 'application/json');\n        headers = headers.append('Authorization', this.authToken);\n        return this.http.get(this.url+'users/chatroom/', {headers: headers});\n    }\n\n    updateUser(user: User){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        this.storeUserData(this.authToken, user);\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.put(this.url+'users/edit/'+user._id, user, {headers: headers});\n    }\n\n    updateUserOnline(){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.put(this.url+'users/edit/'+this.user._id, {_id: this.user._id, status: \"online\"}, {headers: headers});\n    }\n\n    updateUserOffline(){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.put(this.url+'users/edit/'+this.user._id, {_id: this.user._id, status: \"offline\"}, {headers: headers});\n    }\n\n    loadToken(){\n        const token = localStorage.getItem('id_token');\n        this.authToken = token;\n    }\n\n    loadUser(){\n        const user = localStorage.getItem('user');\n        if(user != null){\n            this.user = JSON.parse(user);\n        }\n    }\n\n    loggedIn(){\n        const helper = new JwtHelperService();\n        this.loadToken();\n        const isExpired = helper.isTokenExpired(this.authToken)\n        return !isExpired;\n    }\n\n    storeUserData(token: any, user: User){\n        localStorage.setItem('id_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        this.authToken = token;\n        this.user = user;\n    }\n\n    logout(){\n        setTimeout(() => {}, 1000);\n        localStorage.clear();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { ChatMessage } from '../models/chat-message.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n    user: User;\n    chatMessage!: ChatMessage;\n    chatMessages: ChatMessage[];\n    url: String = 'http://localhost:3000/';\n\n  constructor(private authService: AuthService, private http: HttpClient) {\n      this.authService.loadUser();\n      this.user = this.authService.user;\n      this.chatMessage = new ChatMessage;\n      this.chatMessages = [];   //set to load the most recent 25 Messages\n  }\n\n  sendMessage(msg: string) {\n      const timestamp = this.getTimeStamp();\n      const chatMessage = new ChatMessage();\n      let headers = new HttpHeaders();\n\n      headers = headers.set('Content-Type', 'application/json');\n\n      chatMessage.timestamp = timestamp;\n      chatMessage.username = this.user.username;\n      chatMessage.message = msg;\n      chatMessage.datetime = Date.now();\n\n      //this.chatMessage.key = [{}]; //replace with all online user id's when available\n\n      return this.http.post(this.url+'messages/chatmessage', JSON.stringify(chatMessage), {headers: headers}).subscribe();\n  }\n\n//Testing only for Content-Length param\n/*\nlengthInUtf8Bytes(str: string) {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  var m = encodeURIComponent(str).match(/%[89ABab]/g);\n  return str.length + (m ? m.length : 0);\n}\n*/\n\n  getMessages() {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      return this.http.get(this.url+'messages/chatmessage', {headers: headers});\n  }\n\n  getTimeStamp() {\n        const now = new Date();\n        const date = now.getUTCFullYear() + '/' +\n            (now.getUTCMonth()+1) + '/' +\n            now.getUTCDate();\n\n        const time = now.getUTCHours() + ':' +\n            now.getUTCMinutes() + ':' +\n            now.getUTCSeconds();\n\n        return (date + ' ' + time);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}