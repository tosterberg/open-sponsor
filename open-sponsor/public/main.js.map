{"version":3,"sources":["./src/app/services/auth.guard.ts","./src/app/components/sponsee-stepwork/sponsee-stepwork.component.html","./src/app/components/sponsee-stepwork/sponsee-stepwork.component.ts","./src/app/services/connect.service.ts","./src/app/models/chat-message.model.ts","./src/environments/environment.ts","./src/app/components/chatroom/chatroom.component.html","./src/app/components/chatroom/chatroom.component.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/chatroom/user-list/user-list.component.html","./src/app/components/chatroom/user-list/user-list.component.ts","./src/app/components/chatroom/chat-form/chat-form.component.ts","./src/app/components/chatroom/chat-form/chat-form.component.html","./src/app/components/view-stepwork/view-stepwork.component.ts","./src/app/components/view-stepwork/view-stepwork.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/user.model.ts","./src/app/components/stepwork/stepwork.component.html","./src/app/components/stepwork/stepwork.component.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/models/learn.model.ts","./src/app/components/search-learning/search-learning.component.ts","./src/app/components/search-learning/search-learning.component.html","./src/app/app.module.ts","./src/app/components/chatroom/chat-message/chat-message.component.ts","./src/app/components/chatroom/chat-message/chat-message.component.html","./src/app/components/requests/requests.component.html","./src/app/components/requests/requests.component.ts","./src/app/services/validate.service.ts","./src/app/components/user-search/user-search.component.html","./src/app/components/user-search/user-search.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/chatroom/chat-feed/chat-feed.component.html","./src/app/components/chatroom/chat-feed/chat-feed.component.ts","./src/app/services/auth.service.ts","./src/app/components/edit-stepwork/edit-stepwork.component.ts","./src/app/components/edit-stepwork/edit-stepwork.component.html","./src/app/components/create-learning/create-learning.component.ts","./src/app/components/create-learning/create-learning.component.html","./src/app/components/edit-learning/edit-learning.component.ts","./src/app/components/edit-learning/edit-learning.component.html","./src/app/services/chat.service.ts","./src/app/services/learning.service.ts","./src/app/app-routing.module.ts","./src/app/components/my-published-learnings/my-published-learnings.component.html","./src/app/components/my-published-learnings/my-published-learnings.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(public authService:AuthService, private router:Router){\r\n\r\n    }\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","<div class=\"jumbotron\">\n    <h3 class=\"text-center\">Sponsees Stepwork</h3>\n</div>\n<div class=\"feed card\" style=\"width: 48rem;\">\n    <div *ngFor=\"let learn of learnings; let i = index\" class=\"learn\">\n        <div class=\"card-header\">\n            <div class=\"text-end\">\n                <em>Step {{ learn.step }}</em>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <em>@{{ learn.username }}</em>\n            <h6>{{ learn.title }}</h6>\n            <div class=\"text-end\">\n                <button (click)=\"onView(i)\" [routerLink]=\"['/viewStepwork']\" type=\"button\" class=\"btn btn-primary text-end\">View</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LearningService } from '../../services/learning.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-sponsee-stepwork',\n  templateUrl: './sponsee-stepwork.component.html',\n  styleUrls: ['./sponsee-stepwork.component.css']\n})\nexport class SponseeStepworkComponent implements OnInit {\n    sponsees !: Array<any>;\n    learnings !: Array<any>;\n    user !: User;\n\n  constructor(\n      private authService: AuthService,\n      private learnService: LearningService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n      this.user = this.authService.getUser();\n      this.sponsees = this.user.sponsee;\n      this.onSearch();\n  }\n\n  onSearch() {\n    /** Clear books so that new search starts on a fresh screen */\n    this.learnService.getSponseeStepwork(this.sponsees).subscribe((res: any) => {\n        if (res.learnings[0]) {\n            this.learnings = res.learnings;\n            return true;\n        }\n    },\n    err => {\n        console.log(err);\n        return false;\n        });\n    }\n\n  onView(index: number) {\n      this.learnService.storeLearningForEdit(this.learnings[index]);\n      this.router.navigate(['/viewStepwork']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Request } from '../models/request.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectService {\n    myUsername: any;\n    myUser: User;\n    myRooms: Array<any>;\n    connectKeys: any;\n    request: Request;\n    url: String = 'http://localhost:3000/';\n\n  constructor(\n      private auth: AuthService,\n      private http: HttpClient\n  ) {\n      this.myRooms = [];\n      this.myRooms.push({room: 'chatroom', key: 'chatroom'});\n      this.myUsername = this.auth.getMyUsername();\n      this.myUser = this.auth.getUser();\n      this.request = {\n          // _id: string,\n          // key: string,\n          fromUsername: this.myUsername\n          // request: string,\n          // timestamp: string,\n          // datetime: number,\n          // connect: boolean\n\n      }\n  }\n\n  acceptSponsorRequest(username: string): any{\n      /** Update the local account sponsor & the remote account sponsees */\n      this.updateMySponsor(username, () => {\n          return this.updateTheirSponsees(username);\n      });\n  }\n\n  acceptSponseeRequest(username: string): any{\n      /** Update the local account sponsees & the remote account sponsor */\n      this.updateMySponsees(username, () => {\n          return this.updateTheirSponsor(username);\n      });\n  }\n\n  deleteRequest(key: string){\n      console.log('removing ', key);\n  }\n\n  getMyConnections(): any{\n      /** Create list of \"rooms\" for communication with connections */\n      let headers = new HttpHeaders();\n      headers = headers.append('Authorization', this.auth.getToken());\n      return this.http.get(this.url+'requests/connections/'+this.myUser._id, {headers: headers});\n  }\n\n  getMyRequests(){\n      let headers = new HttpHeaders();\n      headers = headers.append('Authorization', this.auth.getToken());\n      return this.http.get(this.url+'requests/myRequests/'+this.myUsername, {headers: headers});\n  }\n\n  makeSponsorRequest(key: string, theirUsername: string){\n      /** Post request message to remote users requests */\n      this.request.key = key;\n      this.request.request = 'Do you want to be my sponsor?';\n      this.request.toUsername = theirUsername;\n      this.request.reqType = 'sponsor';\n      return this.sendRequest(this.request);\n  }\n\n  makeSponseeRequest(key: string, theirUsername: string){\n       /** Post request message to remote users requests */\n       this.request.key = key;\n       this.request.request = 'Do you want to be my sponsee?';\n       this.request.toUsername = theirUsername;\n       this.request.reqType = 'sponsee';\n       return this.sendRequest(this.request);\n  }\n\n  sendRequest(req: Request){\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      return this.http.post(this.url+'requests/connect', req, {headers: headers});\n  }\n\n  rejectRequest(req: any){\n      /** Delete message and remove connectKeys */\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      this.http.put(this.url+'requests/edit/'+req._id, req, {headers: headers}).subscribe((data: any) => {\n          return data;\n      });\n  }\n\n  updateMySponsor(username: string, callback: any){\n      this.auth.setTargetUser(this.myUsername, () => {\n          callback(this.auth.updateUserSponsor(username));\n      });\n  }\n\n  updateMySponsees(username: string, callback: any){\n      this.auth.setTargetUser(this.myUsername, () => {\n          callback(this.auth.updateUserSponsee(username));\n      });\n  }\n\n  updateTheirSponsor(username: string){\n      this.auth.setTargetUser(username, () => {\n          return this.auth.updateUserSponsor(this.myUsername);\n      });\n  }\n\n  updateTheirSponsees(username: string){\n      this.auth.setTargetUser(username, () => {\n          return this.auth.updateUserSponsee(this.myUsername);\n      });\n  }\n\n  updateRequest(req: any){\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      this.http.put(this.url+'requests/edit/'+req._id, req, {headers: headers}).subscribe((data: any) => {\n          return data;\n      });\n  }\n}\n","export class ChatMessage {\r\n    key?: string;\r\n    _id?: string;\r\n    username?: string;\r\n    message?: string;\r\n    timestamp?: string;\r\n    datetime?: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"btn-group\">\r\n  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    {{ title }}\r\n  </button>\r\n  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n      <div *ngFor=\"let chats of rooms\">\r\n          <li><a class=\"dropdown-item\" (click)=\"filterMessages(chats)\">{{ chats.room }}</a></li>\r\n        </div>\r\n  </ul>\r\n</div>\r\n<div class=\"main-chat jumbotron\">\r\n    <table class=\"table\">\r\n        <tr>\r\n            <td>\r\n                <div class=\"user-list-wrapper\">\r\n                    <app-user-list></app-user-list>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div #scroller class=\"feed-wrapper\">\r\n                    <app-chat-feed></app-chat-feed>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"chat-form-wrapper\">\r\n        <app-chat-form></app-chat-form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ConnectService } from '../../services/connect.service';\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.css']\n})\nexport class ChatroomComponent implements OnInit {\n\n    rooms: Array<any>;\n    title: string;\n\n  constructor(private connect: ConnectService) {\n      this.rooms = [];\n      this.rooms.push({room: 'chatroom', key: 'chatroom'});\n      this.title = 'chatroom';\n  }\n\n  ngOnInit(): void {\n      this.connect.getMyConnections().subscribe((data: any) => {\n          for (var i in data) {\n              this.rooms.push({room: data[i].toUsername + \"/\" + data[i].fromUsername, key: data[i].key});\n          }\n      });\n  }\n\n  filterMessages(room: any){\n      this.title = room.room;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>OpenSponsor</h1>\n    <p class=\"lead\">Welcome to the open-source sponsor matching and step-work service!</p>\n    <div>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>&nbsp;<a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-md-4\">\n        <h3>Find a Sponsor</h3>\n        <p>If you want to go through the 12-steps and need some guidance look no further.  You can find an available sponsor here that will take you through the steps.</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Be a Sponsor</h3>\n        <p>Are you experienced at taking other people through the 12-steps and want to find more people to help?  Register here and select \"Looking to take other people through the steps.\"</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Make step-work modules</h3>\n        <p>Want to make an impact on more people?  Create your own modules for taking others through step-work.  Share your experience, strengh, and hope with others by making learning modules to help others go through the steps.</p>\n    </div>\n</div>\n","<div *ngIf=\"user; else elseBlock\">\n    <div *ngIf=\"!edit;\">\n        <h2 class=\"page-header\">Hello {{user.name}}!</h2>\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\">Username: {{user.username}}</li>\n            <li class=\"list-group-item\">Name: {{user.name}}</li>\n            <li class=\"list-group-item\">Email: {{user.email}}</li>\n            <li class=\"list-group-item\">Looking for a sponsor? {{user.lfsponsor}}</li>\n            <li class=\"list-group-item\">Looking to sponsor others? {{user.sponsoring}}</li>\n            <li *ngIf=\"user.sponsor;\" class=\"list-group-item\">Sponsor: {{user.sponsor}}</li>\n            <li class=\"list-group-item\">Biography: {{user.bio}}</li>\n        </ul>\n        <br>\n        <button (click)=\"onEdit()\" class=\"btn btn-secondary\">Edit</button>\n    </div>\n    <div *ngIf=\"edit;\">\n        <h3 class=\"page-header text-center\">Editing {{user.username}}...</h3>\n        <table class=\"table-bordered\">\n            <tr>\n                <td>Name: </td>\n                <td><input type=\"text\" [(ngModel)]=\"user.name\" name=\"user.name\" class=\"form-control\"></td>\n            </tr>\n            <tr>\n                <td>Email: </td>\n                <td><input type=\"text\" [(ngModel)]=\"user.email\" name=\"user.email\" class=\"form-control\"></td>\n            </tr>\n            <tr>\n                <td>Looking for a sponsor? </td>\n                <td><input type=\"checkbox\" [(ngModel)]=\"user.lfsponsor\" name=\"user.lfsponsor\" class=\"form-control-checkbox\"></td>\n            </tr>\n            <tr>\n                <td>Looking to sponsor others? </td>\n                <td><input type=\"checkbox\" [(ngModel)]=\"user.sponsoring\" name=\"user.sponsoring\" class=\"form-control-checkbox disable\"></td>\n            </tr>\n            <tr *ngIf=\"user.sponsor\">\n                <td>Sponsor: {{ user.sponsor }} &nbsp;&nbsp;</td>\n                <button (click)=\"onRemoveSponsor()\" class=\"btn btn-primary\">Remove Sponsor?</button>\n            </tr>\n            <tr>\n                <td>Biography: </td>\n                <td><textarea [(ngModel)]=\"user.bio\" name=\"user.bio\" rows=\"5\" cols=\"80\"></textarea></td>\n            </tr>\n        </table>\n        <br>\n        <div>\n            <button (click)=\"onSave()\" class=\"btn btn-primary\">Save</button>\n            <label>&nbsp;&nbsp;</label>\n            <button (click)=\"onCancel()\" class=\"btn btn-secondary\">Cancel</button>\n        </div>\n    </div>\n</div>\n<ng-template #elseBlock>\n    <div class=\"jumbotron text-center\">\n        <h2>You are not logged in!</h2>\n        <br>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a>&nbsp;<a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { User } from '../../models/user.model';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n    user!: User;\n    edit: Boolean;\n\n    //inject dependencies\n  constructor(\n      private authService:AuthService,\n      private flashMessage: FlashMessagesService\n  ) {\n      this.edit = false;\n  }\n\n  ngOnInit() {\n      /** View the User from db */\n       this.authService.getProfile().subscribe((profile: any) => {\n           if(profile.user !== null || profile.user !== undefined){\n               this.user = profile.user;\n           }\n       },\n        err => {\n            console.log(err);\n            return false;\n        });\n  }\n\n  onEdit() {\n      this.edit = true;\n  }\n\n  onCancel() {\n      this.edit = false;\n  }\n\n  onSave() {\n      this.authService.updateUser(this.user).subscribe((data: any) => {\n          if(data.success){\n              this.flashMessage.show('Your account was updated', {cssClass: 'alert-success', timeout: 3000});\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          }\n      });\n      this.edit = false;\n  }\n\n  onRemoveSponsor(){}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h2 class=\"page-header\">Dashboard</h2>\n    <p>Welcome to your Dashboard</p>\n</div>\n<app-user-search></app-user-search>\n","<div class=\"d-flex flex-column p-3 bg-light\" style=\"width: 180px;\">\n    <h5>User List</h5>\n    <ul class=\"nav nav-pills flex-column mb-auto\">\n        <li *ngFor=\"let user of users\" class=\"nav-item user\">\n            <em>@{{ user.username }}</em>\n            <br>\n        </li>\n    </ul>\n</div>\n","import { Component, OnInit, OnChanges} from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n    users!: Array<any>;\n\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n      this.getLoggedInUsers();\n  }\n\n\n  ngOnChanges() {\n      this.getLoggedInUsers();\n  }\n\n  //Needs extended to show everyone currently logged in\n  getLoggedInUsers() {\n      this.authService.getAllOnlineUsers().subscribe((user: any) => {\n          if(user.user !== null){\n              this.users = user.users;\n          }\n      },\n       err => {\n           console.log(err);\n           return false;\n       });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../../services/chat.service';\n\n\n@Component({\n  selector: 'app-chat-form',\n  templateUrl: './chat-form.component.html',\n  styleUrls: ['./chat-form.component.css']\n})\nexport class ChatFormComponent implements OnInit {\n    message: string;\n\n\n  constructor(private chat: ChatService) {\n      this.message = '';\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  send() {\n      this.chat.sendMessage(this.message, 'chatroom');\n      this.message = '';\n      /** Below forces a window refresh until messaging can be updated with sockets */\n      window.location.reload();\n  }\n\n  handleSubmit(event: any) {\n      if (event.keyCode == 13) {\n          this.send();\n      } else {return}\n  }\n\n}\n","<input class=\"chat-input\" [(ngModel)]=\"message\" (keydown)=\"handleSubmit($event)\" />&nbsp;\n<button class=\"btn btn-primary\" (click)=send()>Send</button>\n","import { Component, OnInit } from '@angular/core';\nimport { Learn } from '../../models/learn.model';\nimport { LearningService } from '../../services/learning.service';\n\n\n@Component({\n  selector: 'app-view-stepwork',\n  templateUrl: './view-stepwork.component.html',\n  styleUrls: ['./view-stepwork.component.css']\n})\nexport class ViewStepworkComponent implements OnInit {\n    learn !: Learn;\n\n  constructor(\n      private learnService: LearningService\n  ) { }\n\n  ngOnInit(): void {\n      this.learn = this.learnService.getStoredLearning();\n  }\n\n}\n","<h2 class=\"page-header text-center\">View Sponsee Stepwork</h2>\n<form>\n    <div class=\"form-group\">\n        <div>\n            <label>Title: <em>{{ learn.title }}</em></label>\n        </div>\n        <div>\n            <label>Step: <em>Step {{ learn.step }}</em></label>\n        </div>\n        <div>\n            <label>Username: <em>@{{ learn.username }}</em></label>\n        </div>\n    </div>\n    <div class=\"form-outline\">\n        <label>Learning Content</label>\n        <div class=\"text-center\">\n            <textarea readonly rows=\"10\" cols=\"80\">{{ learn.content }}</textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>Stepwork Working Area</label>\n        <div class=\"text-center\">\n            <textarea readonly rows=\"10\" cols=\"80\">{{ learn.stepwork }}</textarea>\n        </div>\n    </div>\n    <div class=\"text-center\">\n        <button [routerLink]=\"['/sponseeStepwork']\" type=\"button\" class=\"btn btn-secondary\" value=\"Cancel\">Exit</button>\n    </div>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'os-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'open-sponsor';\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","export class User {\r\n    _id?: string;\r\n    name?: string;\r\n    email?: string;\r\n    username?: string;\r\n    password?: string;\r\n    lfsponsor?: boolean;\r\n    sponsoring?: boolean;\r\n    sponsor?: string;\r\n    sponsee?: any;\r\n    bio?: string;\r\n    status?: string;\r\n}\r\n","<div class=\"jumbotron\">\n    <h3 class=\"text-center\">My Stepwork</h3>\n</div>\n<div class=\"feed card\" style=\"width: 48rem;\">\n    <div *ngFor=\"let learn of learnings; let i = index\" class=\"learn\">\n        <div class=\"card-header\">\n            <div class=\"text-end\">\n                <em>Step {{ learn.step }}</em>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <h6>{{ learn.title }}</h6>\n            <div class=\"text-end\">\n                <button (click)=\"onRemove(i)\" [routerLink]=\"['/stepwork']\" type=\"button\" class=\"btn btn-danger text-end\">Delete</button>\n                <label>&nbsp;&nbsp;&nbsp;</label>\n                <button (click)=\"onEdit(i)\" [routerLink]=\"['/editModules']\" type=\"button\" class=\"btn btn-success text-end\">Edit Stepwork</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { LearningService } from './../../services/learning.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-stepwork',\n  templateUrl: './stepwork.component.html',\n  styleUrls: ['./stepwork.component.css']\n})\nexport class StepworkComponent implements OnInit {\n    username !: any;\n    learnings !: Array<any>;\n\n  constructor(\n      private authService: AuthService,\n      private learnService: LearningService,\n      private flashMessage: FlashMessagesService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n      this.username = this.authService.getMyUsername();\n      this.onSearch();\n  }\n\n  onSearch() {\n    /** Clear books so that new search starts on a fresh screen */\n    this.learnService.getMyStepwork(this.username).subscribe((res: any) => {\n        if (res.learnings[0]) {\n            this.learnings = res.learnings;\n            return true;\n        }\n    },\n    err => {\n        console.log(err);\n        return false;\n        });\n    }\n\n    onEdit(index: number) {\n        this.learnService.storeLearningForEdit(this.learnings[index]);\n        this.router.navigate(['/editStepwork']);\n    }\n\n    onRemove(index: number){\n        console.log(this.learnings[index]);\n        this.learnService.removeStepwork(this.learnings[index])\n        .subscribe((data: any) => {\n            if(data.success === false){\n                this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n            } else {\n                this.flashMessage.show('Stepwork successfully deleted', {cssClass: 'alert-success', timeout: 3000});\n                window.location.reload();\n            }\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    username: string;\n    password: string;\n\n  constructor(\n      private authService:AuthService,\n      private router:Router,\n      private flashMessage:FlashMessagesService\n  ) {\n      this.username = '';\n      this.password = '';\n  }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n      const user = {\n          username: this.username,\n          password: this.password\n      }\n\n      this.authService.authenticateUser(user).subscribe((data: any) => {\n          if(data.success){\n              this.authService.storeUserData(data.token, data.user);\n              setTimeout(() => {}, 1000);\n              this.authService.updateUserOnline().subscribe((data: any) => {\n                  if(data.success){\n                  } else {\n                      console.log(data);\n                  }\n              });\n              this.flashMessage.show(\"Login Successful\", {\n                  cssClass: 'alert-success',\n                  timeout: 5000});\n              this.router.navigate(['/dashboard']);\n          } else {\n              this.flashMessage.show(data.msg, {\n                  cssClass: 'alert-danger',\n                  timeout: 5000});\n              this.router.navigate(['/login']);\n          }\n      });\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from './../../services/validate.service';\nimport { AuthService } from './../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    user = new User();\n\n\n  constructor(\n      private validateService: ValidateService,\n      private flashMessage: FlashMessagesService,\n      private authService: AuthService,\n      private router: Router\n  ) {\n      this.user.lfsponsor = false;\n      this.user.sponsoring = false;\n      this.user.status = 'offline';\n    }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit(){\n      //Required Fields\n      if(!this.validateService.validateRegister(this.user)){\n          this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n          return false;\n      }\n\n      if(!this.validateService.validateEmail(this.user.email)){\n          this.flashMessage.show('Please enter a valid email', {cssClass: 'alert-danger', timeout: 3000});\n          return false;\n      }\n\n      // Register User\n      this.authService.registerUser(this.user).subscribe((data: any) => {\n          if(data.success){\n              this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\n              this.router.navigate(['/login']);\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n              this.router.navigate(['/register']);\n          }\n      });\n\n  }\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"user.name\" name=\"user.name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"user.username\" name=\"user.username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"user.email\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"user.password\" class=\"form-control\">\n    </div>\n    <div class=\"checkbox text-center\">\n        <label>Looking for a sponsor?&nbsp;&nbsp;</label>\n        <input type=\"checkbox\" [(ngModel)]=\"user.lfsponsor\" name=\"user.lfsponsor\" class=\"form-checkbox\">\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <label>Looking to sponsor someone?&nbsp;&nbsp;</label>\n        <input type=\"checkbox\" [(ngModel)]=\"user.sponsoring\" name=\"user.sponsoring\" class=\"form-checkbox\">\n    </div>\n    <div class=\"form-group\">\n        <label>Biography</label>\n        <div class=\"text-center\">\n            <textarea [(ngModel)]=\"user.bio\" name=\"user.bio\" rows=\"5\" cols=\"80\"></textarea>\n        </div>\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>\n","export class Learn {\r\n    _id?: string;\r\n    creator?: string;\r\n    title?: string;\r\n    step?: string;\r\n    content?: string;\r\n    stepwork?: string;\r\n    username?: string;\r\n    timestamp?: string;\r\n    datetime?: number;\r\n    master?: boolean;\r\n    disabled?: boolean;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { LearningService } from './../../services/learning.service';\nimport { User } from '../../models/user.model';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-search-learning',\n  templateUrl: './search-learning.component.html',\n  styleUrls: ['./search-learning.component.css']\n})\nexport class SearchLearningComponent implements OnInit {\n    search: String;\n    user = new User();\n    learnings!: Array<any>;\n\n  constructor(\n      private authService: AuthService,\n      private learnService: LearningService,\n      private flashMessage: FlashMessagesService\n  ) {\n      this.user = this.authService.getUser();\n      this.search = '';\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onSearch() {\n      /** Clear learnings so that new search starts on a fresh screen */\n      this.learnings = new Array();\n      this.learnService.getSearchLearnings(this.search).subscribe((res: any) => {\n          if (res.learnings[0]) {\n              this.learnings = res.learnings;\n              return true;\n          }\n      },\n      err => {\n          console.log(err);\n          return false;\n      });\n  }\n\n  handleSubmit(event: any) {\n      // Allows the enter key to be used instead of the click event\n      if (event.keyCode == 13) {\n          this.onSearch();\n      } else {return}\n  }\n\n  onSave(index: number) {\n      this.learnService.saveLearningToStepwork(this.learnings[index]).subscribe((res: any) => {\n          if(res.success){\n              this.flashMessage.show('You saved the learning module to your stepwork.', {cssClass: 'alert-success', timeout: 3000});\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          }\n      });\n  }\n}\n","<div class=\"jumbotron\">\n    <h3 class=\"text-center\">Search stepwork modules</h3>\n    <br>\n    <div class=\"input-group\">\n        <input (keydown)=\"handleSubmit($event)\" type=\"search\" [(ngModel)]=\"search\" name=\"search\" class=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"search-addon\" />\n        <button (click)=\"onSearch()\" [routerLink]=\"['/findModules']\" type=\"button\" class=\"btn btn-outline-primary\">search</button>\n    </div>\n</div>\n<div class=\"feed card\" style=\"width: 48rem;\">\n    <div *ngFor=\"let learn of learnings; let i = index\" class=\"books\">\n        <div class=\"card-header\">\n            <div class=\"text-end\">\n                <em>Step {{ learn.step }} - by {{ learn.creator }}</em>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <h6>{{ learn.title }}</h6>\n            <div class=\"text-end\">\n                <button (click)=\"onSave(i)\" [disabled]=\"learn.disabled\" (click)=\"learn.disabled=true\" type=\"button\" class=\"btn btn-secondary text-end\">Save as Stepwork</button>\n            </div>\n        </div>\n    </div>\n</div>\n","//import modules\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n//import components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ChatroomComponent } from './components/chatroom/chatroom.component';\nimport { UserListComponent } from './components/chatroom/user-list/user-list.component';\nimport { ChatFeedComponent } from './components/chatroom/chat-feed/chat-feed.component';\nimport { ChatMessageComponent } from './components/chatroom/chat-message/chat-message.component';\nimport { ChatFormComponent } from './components/chatroom/chat-form/chat-form.component';\nimport { UserSearchComponent } from './components/user-search/user-search.component';\nimport { CreateLearningComponent } from './components/create-learning/create-learning.component';\nimport { EditLearningComponent } from './components/edit-learning/edit-learning.component';\nimport { SearchLearningComponent } from './components/search-learning/search-learning.component';\nimport { RequestsComponent } from './components/requests/requests.component';\nimport { StepworkComponent } from './components/stepwork/stepwork.component';\nimport { MyPublishedLearningsComponent } from './components/my-published-learnings/my-published-learnings.component';\nimport { EditStepworkComponent } from './components/edit-stepwork/edit-stepwork.component';\nimport { SponseeStepworkComponent } from './components/sponsee-stepwork/sponsee-stepwork.component';\nimport { ViewStepworkComponent } from './components/view-stepwork/view-stepwork.component';\n\n//import services\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/auth.guard'\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ChatService } from './services/chat.service';\nimport { ConnectService } from './services/connect.service';\nimport { LearningService } from './services/learning.service';\n\n//  Create route map for moving around the url\n//  Routes protected by AuthGuard will reroute to login when not logged in\nconst appRoutes: Routes = [\n    {path:'', component: HomeComponent},\n    {path:'register', component: RegisterComponent},\n    {path:'login', component: LoginComponent},\n    {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n    {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n    {path:'chatroom', component: ChatroomComponent, canActivate:[AuthGuard]},\n    {path:'requests', component: RequestsComponent, canActivate:[AuthGuard]},\n    {path:'createModules', component: CreateLearningComponent, canActivate:[AuthGuard]},\n    {path:'myPublishedModules', component: MyPublishedLearningsComponent, canActivate:[AuthGuard]},\n    {path:'editModules', component: EditLearningComponent, canActivate:[AuthGuard]},\n    {path:'findModules', component: SearchLearningComponent, canActivate:[AuthGuard]},\n    {path:'stepwork', component: StepworkComponent, canActivate:[AuthGuard]},\n    {path:'editStepwork', component: EditStepworkComponent, canActivate:[AuthGuard]},\n    {path:'viewStepwork', component: ViewStepworkComponent, canActivate:[AuthGuard]},\n    {path:'sponseeStepwork', component: SponseeStepworkComponent, canActivate:[AuthGuard]}\n]\n\n/*\n    declarations: components,\n    imports: modules,\n    providers: services,\n    bootstrap: Init component\n*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    ChatroomComponent,\n    UserListComponent,\n    ChatFeedComponent,\n    ChatMessageComponent,\n    ChatFormComponent,\n    UserSearchComponent,\n    CreateLearningComponent,\n    EditLearningComponent,\n    SearchLearningComponent,\n    RequestsComponent,\n    StepworkComponent,\n    MyPublishedLearningsComponent,\n    EditStepworkComponent,\n    SponseeStepworkComponent,\n    ViewStepworkComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    AppRoutingModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [\n      ValidateService,\n      AuthService,\n      JwtHelperService,\n      AuthGuard,\n      ChatService,\n      ConnectService,\n      LearningService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n//import { ChatService } from '../../../services/chat.service';\nimport { ChatMessage } from '../../../models/chat-message.model';\n\n@Component({\n  selector: 'app-chat-message',\n  templateUrl: './chat-message.component.html',\n  styleUrls: ['./chat-message.component.css']\n})\nexport class ChatMessageComponent implements OnInit {\n\n    @Input() chatMessage: ChatMessage;\n    username?: string;\n    message?: string;\n    timestamp?: string;\n\n\n  constructor() {\n      this.chatMessage = {};\n      this.chatMessage.message = '';\n  }\n\n  ngOnInit(chatMessage = this.chatMessage) {\n      this.message = chatMessage.message;\n      this.username = chatMessage.username;\n      this.timestamp = chatMessage.timestamp;\n  }\n\n}\n","<div class=\"message-container\">\n    <p>{{ username }}</p>\n    <p>{{ timestamp }}</p>\n    <p>{{ message }}</p>\n</div>\n","<br>\n<h3>Requests for you</h3>\n<br>\n<div class=\"request card\" style=\"width: 42rem;\">\n    <div *ngFor=\"let msg of requests; index as i\" class=\"msg\">\n        <div *ngIf=\"msg.reqType === 'sponsee' || msg.reqType === 'sponsor'\">\n            <div class=\"card-header\">\n                <div class=\"text-front\">\n                    <em>From: {{ msg.fromUsername }}</em>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <h6>{{ msg.request }}</h6>\n            </div>\n            <div>\n                <div class=\"text-end\">\n                    <button (click)=\"acceptRequest(msg)\" class=\"btn btn-success text-end\">Accept</button>\n                    <button (click)=\"rejectRequest(msg)\" class=\"btn btn-danger text-end\">Reject</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ConnectService } from '../../services/connect.service';\n\n@Component({\n  selector: 'app-requests',\n  templateUrl: './requests.component.html',\n  styleUrls: ['./requests.component.css']\n})\nexport class RequestsComponent implements OnInit {\n    requests !: any;\n\n  constructor(private connect: ConnectService) {\n      this.connect.getMyRequests().subscribe(data => {\n          if(data){\n              this.requests = data;\n          }\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  acceptRequest(req: any){\n      if(req.reqType === 'sponsee'){\n          this.connect.acceptSponsorRequest(req.fromUsername);\n          req.reqType = 'connected';\n          this.connect.updateRequest(req);\n      } else {\n          this.connect.acceptSponseeRequest(req.fromUsername);\n          req.reqType = 'connected';\n          this.connect.updateRequest(req);\n      }\n  }\n\n  rejectRequest(req: any){\n      req.reqType = 'rejected';\n      this.connect.updateRequest(req);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user: any){\n      if(user.username == undefined || user.username == \"\" || user.email == undefined || user.email == \"\" || user.password == undefined || user.password == \"\"){\n          return false;\n      } else {\n          return true;\n      }\n  }\n\n  validateEmail(email: any){\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n  }\n}\n","<div class=\"text-center\">\n    <a *ngIf=\"user.lfsponsor\" class=\"btn btn-primary text-white\" (click)=searchSponsor()>Find a Sponsor</a>&nbsp;<a *ngIf=\"user.sponsoring\" class=\"btn btn-secondary text-white\" (click)=searchSponsee()>Find Sponsees</a>\n</div>\n<div *ngIf=\"search\">\n    <br>\n    <div class=\"search card\" style=\"width: 56rem;\">\n        <div *ngFor=\"let users of search; index as i\" class=\"users\">\n            <div class=\"card-header\">\n                <div class=\"text-front\">\n                    <em>{{ users.username }}</em>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <h6>{{ users.bio }}</h6>\n            </div>\n            <div>\n                <div *ngIf=\"searchType==='sponsor'\" class=\"text-end\">\n                    <button (click)=\"sponsorRequest(users)\" [disabled]=\"users.disabled\" (click)=\"users.disabled=true\" class=\"btn btn-primary text-end\">Sponsor me?</button>\n                </div>\n                <div *ngIf=\"searchType==='sponsee'\" class=\"text-end\">\n                    <button (click)=\"sponseeRequest(users)\" [disabled]=\"users.disabled\" (click)=\"users.disabled=true\" class=\"btn btn-primary text-end\">Sponsor them!</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ConnectService } from '../../services/connect.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\nexport class UserSearchComponent implements OnInit {\n\n    user !: any;\n    key !: string;\n    search: any;\n    searchTarget !: string;\n    searchType: string;\n\n  constructor(\n      private authService: AuthService,\n      private connect: ConnectService,\n      private flashMessage: FlashMessagesService\n  ) {\n      this.searchType = 'none';\n  }\n\n  ngOnInit(): void {\n      this.user = this.authService.getUser();\n  }\n\n  searchSponsor(){\n      this.searchType = 'sponsor';\n      this.authService.getAllSponsoringUsers().subscribe((search: any) => {\n          if(search.users !== null){\n              this.search = search.users.slice().reverse();\n          }\n      },\n       err => {\n           console.log(err);\n           return false;\n       });\n  }\n\n  sponsorRequest(target: any){\n      this.searchTarget = target;\n      this.key = target._id + \" \" + this.user._id;\n      this.connect.makeSponsorRequest(this.key, target.username).subscribe((res: any) => {\n          if(res){\n              this.flashMessage.show(\"Request sent successfully\", {\n                  cssClass: 'alert-success',\n                  timeout: 3000});\n          }\n      },\n      err => {\n          console.error(err);\n          return false;\n      });\n  }\n\n  searchSponsee(){\n      this.searchType = 'sponsee';\n      this.authService.getAllSponseeUsers().subscribe((search: any) => {\n          if(search.users !== null){\n              this.search = search.users.slice().reverse();\n          }\n      },\n       err => {\n           console.log(err);\n           return false;\n       });\n  }\n\n  sponseeRequest(target: any){\n      this.searchTarget = target;\n      this.key = this.user._id + \" \" + target._id;\n      this.connect.makeSponseeRequest(this.key, target.username).subscribe((res: any) => {\n          if(res){\n              this.flashMessage.show(\"Request sent successfully\", {\n                  cssClass: 'alert-success',\n                  timeout: 3000});\n          }\n      },\n      err => {\n          console.error(err);\n          return false;\n      });\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\" aria-label=\"Open sponsor navigation bar\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">OpenSponsor</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbar\">\n        <ul class=\"navbar-nav\">\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" aria-current=\"page\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n          </li>\n          <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n          </li>\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Stepwork</a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdown\">\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/myPublishedModules']\">My Modules</a></li>\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/findModules']\">Find Modules</a></li>\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/stepwork']\">My Step-Work</a></li>\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/sponseeStepwork']\">Sponsee Step-Work</a></li>\n            </ul>\n          </li>\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Account</a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdown\">\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/profile']\">My Profile</a></li>\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/chatroom']\">My Chatroom</a></li>\n                <li><a class=\"dropdown-item\" [routerLink]=\"['/requests']\">My Requests</a></li>\n            </ul>\n          </li>\n          <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n      private flashMessage: FlashMessagesService,\n      public authService: AuthService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n      this.authService.updateUserOffline().subscribe((data: any) => {\n          if(data.success){\n          } else {\n              console.log(data);\n          }\n      });\n      this.authService.logout()\n      this.flashMessage.show(\"Logout Successful\", {\n          cssClass: 'alert-success',\n          timeout: 3000});\n      this.router.navigate(['/login']);\n      return false;\n  }\n\n}\n","<div class=\"feed card\" style=\"width: 24rem;\">\n    <div *ngFor=\"let messages of feed\" class=\"messages\">\n        <div class=\"card-header\">\n            <div class=\"text-end\">\n                <em>@{{ messages.username }}</em>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <h6>{{ messages.message }}</h6>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../../../services/chat.service';\n\n@Component({\n  selector: 'app-chat-feed',\n  templateUrl: './chat-feed.component.html',\n  styleUrls: ['./chat-feed.component.css']\n})\nexport class ChatFeedComponent implements OnInit {\n    feed: any;\n\n  constructor(private chat: ChatService) { }\n\n  ngOnInit(): void {\n      this.chat.getMessages().subscribe((feed: any) => {\n          if(feed.messages !== null){\n              this.feed = feed.messages.slice().reverse();\n          }\n      },\n       err => {\n           console.log(err);\n           return false;\n       });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from '../models/user.model';\n\n\n@Injectable()\nexport class AuthService {\n    authToken: any;\n    user!: User;\n    targetUser!: User;\n    url: String = 'http://localhost:3000/';\n\n    constructor(private http: HttpClient) {\n        this.user = new User();\n    }\n\n    registerUser(user: User){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.post(this.url+'users/register', user, {headers: headers});\n    }\n\n    authenticateUser(user: User){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.post(this.url+'users/authenticate', user, {headers: headers});\n    }\n\n    getProfile(){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Authorization', this.authToken);\n        return this.http.get(this.url+'users/profile', {headers: headers});\n    }\n\n    getUser(){\n        this.loadUser();\n        return this.user;\n    }\n\n    getToken(){\n        return this.authToken;\n    }\n\n    getAnotherUsersIdByUsername(username: string){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Content-Type', 'application/json');\n        headers = headers.append('Authorization', this.authToken);\n        return this.http.get(this.url+'users/'+username, {headers: headers});\n    }\n\n    getMyUserId(){\n        this.loadUser();\n        return this.user._id;\n    }\n\n    getMyUsername(){\n        this.loadUser();\n        return this.user.username;\n    }\n\n    getAllOnlineUsers(){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Content-Type', 'application/json');\n        headers = headers.append('Authorization', this.authToken);\n        return this.http.get(this.url+'users/chatroom/', {headers: headers});\n    }\n\n    getAllSponsoringUsers(){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Content-Type', 'application/json');\n        headers = headers.append('Authorization', this.authToken);\n        return this.http.get(this.url+'users/sponsors/', {headers: headers});\n    }\n\n    getAllSponseeUsers(){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        headers = headers.append('Content-Type', 'application/json');\n        headers = headers.append('Authorization', this.authToken);\n        return this.http.get(this.url+'users/sponsees/', {headers: headers});\n    }\n\n    updateUser(user: User){\n        let headers = new HttpHeaders();\n        this.loadToken();\n        this.storeUserData(this.authToken, user);\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.put(this.url+'users/edit/'+user._id, user, {headers: headers});\n    }\n\n    updateUserSponsor(first: string){\n        let tempurl = this.url+'users/edit/'+this.targetUser._id;\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        this.targetUser.sponsor = first;\n        this.http.put(tempurl, {_id: this.targetUser._id, sponsor: this.targetUser.sponsor}, {headers: headers}).subscribe((data: any) => {\n                return data;\n        });\n    }\n\n    updateUserSponsee(first: string){\n        let tempurl = this.url+'users/edit/'+this.targetUser._id;\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        this.targetUser.sponsee.push({username: first});\n        this.http.put(tempurl, {_id: this.targetUser._id, sponsee: this.targetUser.sponsee}, {headers: headers}).subscribe((data: any) => {\n            return data;\n        });\n    }\n\n    updateUserOnline(){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.put(this.url+'users/edit/'+this.user._id, {_id: this.user._id, status: \"online\"}, {headers: headers});\n    }\n\n    updateUserOffline(){\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        return this.http.put(this.url+'users/edit/'+this.user._id, {_id: this.user._id, status: \"offline\"}, {headers: headers});\n    }\n\n    loadToken(){\n        const token = localStorage.getItem('id_token');\n        this.authToken = token;\n    }\n\n    loadUser(){\n        const user = localStorage.getItem('user');\n        if(user != null){\n            this.user = JSON.parse(user);\n        }\n    }\n\n    loggedIn(){\n        const helper = new JwtHelperService();\n        this.loadToken();\n        const isExpired = helper.isTokenExpired(this.authToken)\n        return !isExpired;\n    }\n\n    setTargetUser(username: string, callback: any){\n        this.getAnotherUsersIdByUsername(username).subscribe((user: any) => {\n            this.targetUser = user.user[0];\n            callback(this.targetUser);\n        });\n    }\n\n    storeUserData(token: any, user: User){\n        localStorage.setItem('id_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        this.authToken = token;\n        this.user = user;\n    }\n\n    logout(){\n        setTimeout(() => {}, 1000);\n        localStorage.clear();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LearningService } from './../../services/learning.service';\nimport { Learn } from '../../models/learn.model';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-stepwork',\n  templateUrl: './edit-stepwork.component.html',\n  styleUrls: ['./edit-stepwork.component.css']\n})\nexport class EditStepworkComponent implements OnInit {\n    username !: any;\n    learn !: Learn;\n\n  constructor(\n      private learnService: LearningService,\n      private flashMessage: FlashMessagesService,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n      this.learn = this.learnService.getStoredLearning();\n      if(!this.learn){\n          this.learn = new Learn();\n      }\n  }\n\n  onSaveModule() {\n      this.learnService.updateLearning(this.learn).subscribe((data: any) => {\n          if(data.success){\n              this.flashMessage.show('You saved your stepwork.', {cssClass: 'alert-success', timeout: 3000});\n              this.router.navigate(['/stepwork']);\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          }\n      });;\n  }\n\n}\n","<h2 class=\"page-header text-center\">Edit Stepwork Learning Module</h2>\n<form (submit)=\"onSaveModule()\">\n    <div class=\"form-group\">\n        <label>Title: <em>{{ learn.title }}</em></label>\n    </div>\n    <div class=\"form-group\">\n        <label>Step {{ learn.step }}</label>\n    </div>\n    <div class=\"form-outline\">\n        <label>Learning Content</label>\n        <div class=\"text-center\">\n            <textarea readonly rows=\"10\" cols=\"80\">{{ learn.content }}</textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>Stepwork Working Area</label>\n        <div class=\"text-center\">\n            <textarea [(ngModel)]=\"learn.stepwork\" name=\"learn.stepwork\" rows=\"10\" cols=\"80\"></textarea>\n        </div>\n    </div>\n    <div class=\"text-center\">\n        <input type=\"submit\" class=\"btn btn-primary\" value=\"Save Module\">\n        <label>&nbsp;&nbsp;</label>\n        <button [routerLink]=\"['/stepwork']\" type=\"button\" class=\"btn btn-secondary\" value=\"Cancel\">Cancel</button>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Learn } from '../../models/learn.model';\nimport { AuthService } from '../../services/auth.service';\nimport { LearningService } from '../../services/learning.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-learning',\n  templateUrl: './create-learning.component.html',\n  styleUrls: ['./create-learning.component.css']\n})\nexport class CreateLearningComponent implements OnInit {\n    learn = new Learn();\n\n  constructor(\n      private auth : AuthService,\n      private learningService : LearningService,\n      private flashMessage : FlashMessagesService,\n      private router : Router\n  ) {\n      this.learn.creator = this.auth.getMyUsername();\n      this.learn.title =  '';\n      this.learn.step =  '';\n      this.learn.content =  '';\n      this.learn.stepwork =  '';\n      this.learn.master = true;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSaveModule() {\n      this.learningService.postNewLearning(this.learn).subscribe((data: any) => {\n          if(data.success){\n              this.flashMessage.show('You published your learning module.', {cssClass: 'alert-success', timeout: 3000});\n              this.router.navigate(['/myPublishedModules']);\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          }\n      });;\n  }\n\n}\n","<h2 class=\"page-header text-center\">Create Stepwork Learning Module</h2>\n<form (submit)=\"onSaveModule()\">\n    <div class=\"form-group\">\n        <label>Title</label>\n        <input type=\"text\" [(ngModel)]=\"learn.title\" name=\"learn.title\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Step</label>\n        <input type=\"text\" [(ngModel)]=\"learn.step\" name=\"learn.step\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Learning Content</label>\n        <div class=\"text-center\">\n            <textarea [(ngModel)]=\"learn.content\" name=\"learn.content\" rows=\"10\" cols=\"80\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>Stepwork Working Area</label>\n        <div class=\"text-center\">\n            <textarea [(ngModel)]=\"learn.stepwork\" name=\"learn.stepwork\" rows=\"10\" cols=\"80\"></textarea>\n        </div>\n    </div>\n    <div class=\"text-center\">\n        <input type=\"submit\" class=\"btn btn-primary\" value=\"Save Module\">\n        <label>&nbsp;&nbsp;</label>\n        <button [routerLink]=\"['/myPublishedModules']\" type=\"button\" class=\"btn btn-secondary\" value=\"Cancel\">Cancel</button>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { LearningService } from './../../services/learning.service';\nimport { Learn } from '../../models/learn.model';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-learning',\n  templateUrl: './edit-learning.component.html',\n  styleUrls: ['./edit-learning.component.css']\n})\nexport class EditLearningComponent implements OnInit {\n    username !: any;\n    learn !: Learn;\n\n  constructor(\n      private learnService: LearningService,\n      private flashMessage: FlashMessagesService,\n      private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n      this.learn = this.learnService.getStoredLearning();\n      if(!this.learn){\n          this.learn = new Learn();\n      }\n  }\n\n  onSaveModule() {\n      this.learnService.updateLearning(this.learn).subscribe((data: any) => {\n          if(data.success){\n              this.flashMessage.show('You published your learning module.', {cssClass: 'alert-success', timeout: 3000});\n              this.router.navigate(['/myPublishedModules']);\n          } else {\n              this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n          }\n      });;\n  }\n\n}\n","<h2 class=\"page-header text-center\">Edit Stepwork Learning Module</h2>\n<form (submit)=\"onSaveModule()\">\n    <div class=\"form-group\">\n        <label>Title</label>\n        <input type=\"text\" [(ngModel)]=\"learn.title\" name=\"learn.title\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Step</label>\n        <input type=\"text\" [(ngModel)]=\"learn.step\" name=\"learn.step\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Learning Content</label>\n        <div class=\"text-center\">\n            <textarea [(ngModel)]=\"learn.content\" name=\"learn.content\" rows=\"10\" cols=\"80\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>Stepwork Working Area</label>\n        <div class=\"text-center\">\n            <textarea [(ngModel)]=\"learn.stepwork\" name=\"learn.stepwork\" rows=\"10\" cols=\"80\"></textarea>\n        </div>\n    </div>\n    <div class=\"text-center\">\n        <input type=\"submit\" class=\"btn btn-primary\" value=\"Save Module\">\n        <label>&nbsp;&nbsp;</label>\n        <button [routerLink]=\"['/myPublishedModules']\" type=\"button\" class=\"btn btn-secondary\" value=\"Cancel\">Cancel</button>\n    </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { ChatMessage } from '../models/chat-message.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n    user: User;\n    chatMessage!: ChatMessage;\n    chatMessages: ChatMessage[];\n    url: String = 'http://localhost:3000/';\n\n  constructor(private authService: AuthService, private http: HttpClient) {\n      this.authService.loadUser();\n      this.user = this.authService.user;\n      this.chatMessage = new ChatMessage;\n      this.chatMessages = [];   //set to load the most recent 25 Messages\n  }\n\n  sendMessage(msg: string, room: string) {\n      const timestamp = this.getTimeStamp();\n      const chatMessage = new ChatMessage();\n      let headers = new HttpHeaders();\n\n      headers = headers.set('Content-Type', 'application/json');\n\n      chatMessage.key = room;\n      chatMessage.timestamp = timestamp;\n      chatMessage.username = this.user.username;\n      chatMessage.message = msg;\n      chatMessage.datetime = Date.now();\n\n      return this.http.post(this.url+'messages/chatmessage', JSON.stringify(chatMessage), {headers: headers}).subscribe();\n  }\n\n//Testing only for Content-Length param\n/*\nlengthInUtf8Bytes(str: string) {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  var m = encodeURIComponent(str).match(/%[89ABab]/g);\n  return str.length + (m ? m.length : 0);\n}\n*/\n\n  getMessages() {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      return this.http.get(this.url+'messages/chatmessage', {headers: headers});\n  }\n\n  getTimeStamp() {\n        const now = new Date();\n        const date = now.getUTCFullYear() + '/' +\n            (now.getUTCMonth()+1) + '/' +\n            now.getUTCDate();\n\n        const time = now.getUTCHours() + ':' +\n            now.getUTCMinutes() + ':' +\n            now.getUTCSeconds();\n\n        return (date + ' ' + time);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Learn } from '../models/learn.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LearningService {\n    myUsername: any;\n    user !: User;\n    learning !: Learn;\n    url: String = 'http://localhost:3000/';\n\n  constructor(\n      private auth: AuthService,\n      private http: HttpClient\n  ) {\n        this.myUsername = this.auth.getMyUsername();\n        this.user = this.auth.getUser();\n      }\n\n      postNewLearning(newLearn: Learn){\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.post(this.url+'learnings', newLearn, {headers: headers});\n      }\n\n      getStoredLearning(): Learn{\n          if(!this.learning){\n              this.loadStepwork();\n          }\n          return this.learning;\n      }\n\n      getSearchLearnings(query: String) {\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.get(this.url+'learnings/search/'+query, {headers: headers});\n      }\n\n      storeLearningForEdit(learn: Learn){\n          this.learning = learn;\n          this.storeUserData(learn);\n      }\n\n      saveLearningToStepwork(learn: Learn){\n          this.loadUsername();\n          learn.username = this.myUsername;\n          learn.master = false;\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.post(this.url+'learnings', learn, {headers: headers});\n      }\n\n      removeStepwork(learn: Learn){\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.delete(this.url+'learnings/stepwork/'+learn._id, {headers: headers});\n      }\n\n      updateLearning(learn: Learn){\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.put(this.url+'learnings/edit', learn, {headers: headers});\n      }\n\n      getMyLearnings(creator: any){\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.get(this.url+'learnings/'+creator, {headers: headers});\n      }\n\n      getMyStepwork(username: any){\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.get(this.url+'learnings/stepwork/'+username, {headers: headers});\n      }\n\n      getSponseeStepwork(query: any){\n          let headers = new HttpHeaders();\n          headers = headers.append('Content-Type', 'application/json');\n          return this.http.put(this.url+'learnings/sponsees/', query, {headers: headers});\n      }\n\n      loadStepwork(){\n          const learn = localStorage.getItem('stepwork');\n          if(learn != null){\n              this.learning = JSON.parse(learn);\n          }\n      }\n\n      loadUsername(){\n          this.myUsername = this.auth.getMyUsername();\n      }\n\n      storeUserData(learn: Learn){\n          localStorage.setItem('stepwork', JSON.stringify(learn));\n          this.learning = learn;\n      }\n  }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"jumbotron\">\n    <h3 class=\"text-center\">My Published Learning Modules</h3>\n    <br>\n    <div class=\"text-center\">\n        <button (click)=\"onSearch()\" [routerLink]=\"['/myPublishedModules']\" type=\"button\" class=\"btn btn-outline-primary\">Show my published Modules</button>\n        <label>&nbsp;&nbsp;</label>\n        <input [routerLink]=\"['/createModules']\" type=\"submit\" class=\"btn btn-outline-secondary\" value=\"Add a new module\">\n    </div>\n</div>\n<div class=\"feed card\" style=\"width: 48rem;\">\n    <div *ngFor=\"let learn of learnings; let i = index\" class=\"learn\">\n        <div class=\"card-header\">\n            <div class=\"text-end\">\n                <em>Step {{ learn.step }}</em>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <h6>{{ learn.title }}</h6>\n            <div class=\"text-end\">\n                <button (click)=\"onEdit(i)\" [routerLink]=\"['/editModules']\" type=\"button\" class=\"btn btn-secondary text-end\">Edit</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { LearningService } from './../../services/learning.service';\n\n@Component({\n  selector: 'app-my-published-learnings',\n  templateUrl: './my-published-learnings.component.html',\n  styleUrls: ['./my-published-learnings.component.css']\n})\nexport class MyPublishedLearningsComponent implements OnInit {\n    username !: any;\n    learnings !: Array<any>;\n\n  constructor(\n      private authService: AuthService,\n      private learnService: LearningService\n  ) {  }\n\n  ngOnInit(): void {\n      this.username = this.authService.getMyUsername();\n  }\n\n  onSearch() {\n        /** Clear books so that new search starts on a fresh screen */\n        this.learnService.getMyLearnings(this.username).subscribe((res: any) => {\n            if (res.learnings[0]) {\n                this.learnings = res.learnings;\n                return true;\n            }\n        }, err => {\n                console.log(err);\n                return false;\n        });\n    }\n\n    onEdit(index: number) {\n        this.learnService.storeLearningForEdit(this.learnings[index]);\n    }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}